{"version":3,"sources":["components/Board.js","components/StartModal.js","App.js","reportWebVitals.js","index.js"],"names":["Board","state","turn","userPoints","computerPoints","computerVal","userVal","result","resetGame","bind","handleRockClick","handlePaperClick","handleScissorsClick","this","setState","options","compVal","Math","floor","random","length","prevState","Container","id","Row","Col","className","Button","onClick","variant","React","Component","StartModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","onHide","App","useState","modalShow","setModalShow","show","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.800e7a2a.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport '../styles/Board.css';\n\nclass Board extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            turn: 0,\n            userPoints: 0,\n            computerPoints: 0,\n            computerVal: 'Waiting...',\n            userVal: 'Waiting...',\n            result: 'START the Game'\n        }\n        this.resetGame = this.resetGame.bind(this);\n        this.handleRockClick = this.handleRockClick.bind(this);\n        this.handlePaperClick = this.handlePaperClick.bind(this);\n        this.handleScissorsClick = this.handleScissorsClick.bind(this);\n    }\n\n    resetGame() {\n        this.setState({\n            turn: 0,\n            userPoints: 0,\n            computerPoints: 0,\n            computerVal: 'Waiting...',\n            userVal: 'Waiting...',\n            result: 'Reseted!'\n        })\n    }\n\n    handleRockClick() {\n        const options = ['Rock', 'Paper', 'Scissors'];\n        const compVal = options[Math.floor(Math.random() * options.length)];\n        if (compVal === 'Rock') {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints,\n                    computerPoints: prevState.computerPoints,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Rock',\n                    result: 'Draw!'\n                }\n            })\n        } else if (compVal === 'Paper') {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints,\n                    computerPoints: prevState.computerPoints + 1,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Rock',\n                    result: 'Computer wins!'\n                }\n            })\n        } else {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints + 1,\n                    computerPoints: prevState.computerPoints,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Rock',\n                    result: 'You win!'\n                }\n            })\n        }\n    }\n\n    handlePaperClick() {\n        const options = ['Rock', 'Paper', 'Scissors'];\n        const compVal = options[Math.floor(Math.random() * options.length)];\n        if (compVal === 'Rock') {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints + 1,\n                    computerPoints: prevState.computerPoints,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Paper',\n                    result: 'You win!'\n                }\n            })\n        } else if (compVal === 'Paper') {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints,\n                    computerPoints: prevState.computerPoints,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Paper',\n                    result: 'Draw!'\n                }\n            })\n        } else {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints,\n                    computerPoints: prevState.computerPoints + 1,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Paper',\n                    result: 'Computer wins!'\n                }\n            })\n        }\n    }\n\n    handleScissorsClick() {\n        const options = ['Rock', 'Paper', 'Scissors'];\n        const compVal = options[Math.floor(Math.random() * options.length)];\n        if (compVal === 'Rock') {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints,\n                    computerPoints: prevState.computerPoints + 1,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Scissors',\n                    result: 'Computer wins!'\n                }\n            })\n        } else if (compVal === 'Paper') {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints + 1,\n                    computerPoints: prevState.computerPoints,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Scissors',\n                    result: 'You win!'\n                }\n            })\n        } else {\n            this.setState((prevState) => {\n                return {\n                    userPoints: prevState.userPoints,\n                    computerPoints: prevState.computerPoints,\n                    turn: prevState.turn + 1,\n                    computerVal: compVal,\n                    userVal: 'Scissors',\n                    result: 'Draw!'\n                }\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Container id='container'>\n                    <Row>\n                        <Col id='col'>\n                            <h1 className='header'>{`Player ${this.state.userPoints} - ${this.state.computerPoints} Computer`}</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col id='col'>\n                            <h2 className='header-2'>Player<hr /> <p className='val'>{this.state.userVal}</p></h2>\n                        </Col>\n                        <Col id='col'>\n                            <h2 className='header-2'>Computer<hr /> <p className='val'>{this.state.computerVal}</p></h2>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col id='col'>\n                            <h1 className='result-header'>{this.state.result}</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col id='col'>\n                            <h4>{`Turns Played: ${this.state.turn}`}</h4>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col id='col'>\n                            <Button onClick={this.handleRockClick} id='rps-button'>Rock</Button>\n                            <Button onClick={this.handlePaperClick} id='rps-button'>Paper</Button>\n                            <Button onClick={this.handleScissorsClick} id='rps-button'>Scissors</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col id='col'>\n                            <Button onClick={this.resetGame} variant='danger' id='reset-button'>RESET</Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Board;","import { Modal, Button } from 'react-bootstrap';\n\nfunction StartModal(props) {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Rock-Paper-Scissors Game\n          </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <h4>Here are some tips.</h4>\n                <p>\n                    To play simply check your move by pressing Rock/Paper/Scissors button. At the top you'll see current score, below that you'll see your and computer move. If you want to restart click RESET button. Have fun!\n                </p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default StartModal;","import Board from './components/Board';\nimport StartModal from './components/StartModal';\nimport React from 'react';\nimport './styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [modalShow, setModalShow] = React.useState(true);\n  return (\n    <div className=\"App\">\n      <Board />\n      <StartModal show={modalShow}\n        onHide={() => setModalShow(false)} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}